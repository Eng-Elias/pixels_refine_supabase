create table "public"."canvases" (
    "id" text not null,
    "user_id" uuid not null,
    "name" text not null,
    "width" bigint not null,
    "height" bigint not null,
    "is_featured" boolean not null default false,
    "created_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "updated_at" timestamp with time zone not null default timezone('utc'::text, now())
);


create table "public"."pixels" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "canvas_id" text not null,
    "x" bigint not null,
    "y" bigint not null,
    "color" text not null,
    "created_at" timestamp with time zone not null default timezone('utc'::text, now())
);


create table "public"."users" (
    "id" uuid not null,
    "updated_at" timestamp with time zone,
    "username" text,
    "full_name" text,
    "avatar_url" text
);


CREATE UNIQUE INDEX canvases_pkey ON public.canvases USING btree (id);

CREATE UNIQUE INDEX pixels_pkey ON public.pixels USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

CREATE UNIQUE INDEX users_username_key ON public.users USING btree (username);

alter table "public"."canvases" add constraint "canvases_pkey" PRIMARY KEY using index "canvases_pkey";

alter table "public"."pixels" add constraint "pixels_pkey" PRIMARY KEY using index "pixels_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."canvases" add constraint "canvases_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."canvases" validate constraint "canvases_user_id_fkey";

alter table "public"."pixels" add constraint "pixels_canvas_id_fkey" FOREIGN KEY (canvas_id) REFERENCES canvases(id) ON DELETE CASCADE not valid;

alter table "public"."pixels" validate constraint "pixels_canvas_id_fkey";

alter table "public"."pixels" add constraint "pixels_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."pixels" validate constraint "pixels_user_id_fkey";

alter table "public"."users" add constraint "users_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) not valid;

alter table "public"."users" validate constraint "users_id_fkey";

alter table "public"."users" add constraint "users_username_key" UNIQUE using index "users_username_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_public_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  insert into public.users (id, full_name, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;
$function$
;

grant delete on table "public"."canvases" to "anon";

grant insert on table "public"."canvases" to "anon";

grant references on table "public"."canvases" to "anon";

grant select on table "public"."canvases" to "anon";

grant trigger on table "public"."canvases" to "anon";

grant truncate on table "public"."canvases" to "anon";

grant update on table "public"."canvases" to "anon";

grant delete on table "public"."canvases" to "authenticated";

grant insert on table "public"."canvases" to "authenticated";

grant references on table "public"."canvases" to "authenticated";

grant select on table "public"."canvases" to "authenticated";

grant trigger on table "public"."canvases" to "authenticated";

grant truncate on table "public"."canvases" to "authenticated";

grant update on table "public"."canvases" to "authenticated";

grant delete on table "public"."canvases" to "service_role";

grant insert on table "public"."canvases" to "service_role";

grant references on table "public"."canvases" to "service_role";

grant select on table "public"."canvases" to "service_role";

grant trigger on table "public"."canvases" to "service_role";

grant truncate on table "public"."canvases" to "service_role";

grant update on table "public"."canvases" to "service_role";

grant delete on table "public"."pixels" to "anon";

grant insert on table "public"."pixels" to "anon";

grant references on table "public"."pixels" to "anon";

grant select on table "public"."pixels" to "anon";

grant trigger on table "public"."pixels" to "anon";

grant truncate on table "public"."pixels" to "anon";

grant update on table "public"."pixels" to "anon";

grant delete on table "public"."pixels" to "authenticated";

grant insert on table "public"."pixels" to "authenticated";

grant references on table "public"."pixels" to "authenticated";

grant select on table "public"."pixels" to "authenticated";

grant trigger on table "public"."pixels" to "authenticated";

grant truncate on table "public"."pixels" to "authenticated";

grant update on table "public"."pixels" to "authenticated";

grant delete on table "public"."pixels" to "service_role";

grant insert on table "public"."pixels" to "service_role";

grant references on table "public"."pixels" to "service_role";

grant select on table "public"."pixels" to "service_role";

grant trigger on table "public"."pixels" to "service_role";

grant truncate on table "public"."pixels" to "service_role";

grant update on table "public"."pixels" to "service_role";

grant delete on table "public"."users" to "anon";

grant insert on table "public"."users" to "anon";

grant references on table "public"."users" to "anon";

grant select on table "public"."users" to "anon";

grant trigger on table "public"."users" to "anon";

grant truncate on table "public"."users" to "anon";

grant update on table "public"."users" to "anon";

grant delete on table "public"."users" to "authenticated";

grant insert on table "public"."users" to "authenticated";

grant references on table "public"."users" to "authenticated";

grant select on table "public"."users" to "authenticated";

grant trigger on table "public"."users" to "authenticated";

grant truncate on table "public"."users" to "authenticated";

grant update on table "public"."users" to "authenticated";

grant delete on table "public"."users" to "service_role";

grant insert on table "public"."users" to "service_role";

grant references on table "public"."users" to "service_role";

grant select on table "public"."users" to "service_role";

grant trigger on table "public"."users" to "service_role";

grant truncate on table "public"."users" to "service_role";

grant update on table "public"."users" to "service_role";


